.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "REMCTL_OPEN 3"
.TH REMCTL_OPEN 3 "2022-05-08" "3.18" "remctl Library Reference"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
remctl_open \- Connect to a remote remctl server
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
#include <remctl.h>
.PP
int \fBremctl_open\fR(struct remctl *\fIr\fR, const char *\fIhost\fR,
                   unsigned short \fIport\fR,
                   const char *\fIprincipal\fR);
.PP
int \fBremctl_open_addrinfo\fR(struct remctl *\fIr\fR, const char *\fIhost\fR,
                            const struct addrinfo *\fIai\fR,
                            const char *\fIprincipal\fR);
.PP
int \fBremctl_open_sockaddr\fR(struct remctl *\fIr\fR, const char *\fIhost\fR,
                            const struct sockaddr *\fIaddr\fR, int \fIaddrlen\fR,
                            const char *\fIprincipal\fR);
.PP
int \fBremctl_open_fd\fR(struct remctl *\fIr\fR, const char *\fIhost\fR,
                      int \fIfd\fR, const char *\fIprincipal\fR);
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBremctl_open()\fR opens a \s-1TCP\s0 connection to the given \fIhost\fR on the given
\&\fIport\fR and then authenticates using the remctl protocol and the service
principal \fIprincipal\fR.  \fIr\fR is a remctl struct created via \fBremctl_new()\fR.
\&\fIhost\fR must not be \s-1NULL.\s0  If \fIport\fR is 0, the library first attempts to
connect to the registered port of 4373 and then tries the legacy port of
4444 if that fails.  Future versions of the library will drop this
fallback to 4444.  If \fIprincipal\fR is \s-1NULL,\s0 a service principal of
\&\f(CW\*(C`host/\f(CIhost\f(CW\*(C'\fR is used, with the realm determined by domain-realm
mapping.
.PP
\&\fBremctl_open_addrinfo()\fR operates in the same manner as \fBremctl_open()\fR, but
connects to the first usable address in \fIai\fR, which must be a list of
results as returned by \fBgetaddrinfo\fR\|(3).  The \fIhost\fR is used only to form
the default service principal, and may be \s-1NULL\s0 if \fIprincipal\fR is not \s-1NULL.\s0
.PP
\&\fBremctl_open_sockaddr()\fR is equivalent to \fBremctl_open_addrinfo()\fR with a
single addrinfo structure specifying the use of \s-1TCP\s0 with socket address
\&\fIaddr\fR and length \fIaddrlen\fR.
.PP
\&\fBremctl_open_fd()\fR operates in the same manner as \fBremctl_open_addrinfo()\fR,
but uses an already-established \s-1TCP\s0 connection identified by the file
descriptor \fIfd\fR.  On Windows, \fIfd\fR is of type \f(CW\*(C`SOCKET\*(C'\fR and must be
a valid socket descriptor.
.PP
If no principal is specified and the default is used, the underlying
GSS-API library may canonicalize \fIhost\fR via \s-1DNS\s0 before determining the
service principal, depending on your library configuration.  Specifying a
principal disables this behavior.
.PP
The remctl protocol uses Kerberos via GSS-API for authentication.  The
underlying GSS-API library will use the default ticket cache for
authentication, so to successfully use \fBremctl_open()\fR, the caller should
already have Kerberos tickets for an appropriate realm stored in its
default ticket cache.  The environment variable \s-1KRB5CCNAME\s0 or the
\&\fBremctl_set_ccache\fR\|(3) function can be used to control which ticket cache
is used.
.PP
To control the timeout for the connect and for subsequent calls, see the
\&\fBremctl_set_timeout\fR\|(3) function.  To control the source \s-1IP\s0 used by
\&\fBremctl_open()\fR, \fBremctl_open_addrinfo()\fR, and \fBremctl_open_sockaddr()\fR, see the
\&\fBremctl_set_source_ip\fR\|(3) function.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
\&\fBremctl_open()\fR returns true on success and false on failure.  On failure,
the caller should call \fBremctl_error()\fR to retrieve the error message.
.SH "COMPATIBILITY"
.IX Header "COMPATIBILITY"
The \fBremctl_open()\fR interface has been provided by the remctl client library
since its initial release in version 2.0.  \fBremctl_open_addrinfo()\fR,
\&\fBremctl_open_sockaddr()\fR, and \fBremctl_open_fd()\fR were added in version 3.4.
.PP
The default port was changed to the IANA-registered port of 4373 in
version 2.11.
.PP
Support for IPv6 was added in version 2.4.
.SH "CAVEATS"
.IX Header "CAVEATS"
If the \fIprincipal\fR argument to \fBremctl_open()\fR is \s-1NULL,\s0 most GSS-API
libraries will canonicalize the \fIhost\fR using \s-1DNS\s0 before deriving the
principal name from it.  This means that when connecting to a remctl
server via a \s-1CNAME,\s0 \fBremctl_open()\fR will normally authenticate using a
principal based on the canonical name of the host instead of the specified
\&\fIhost\fR parameter.  This behavior may cause problems if two consecutive
\&\s-1DNS\s0 lookups of \fIhost\fR may return two different results, such as with some
DNS-based load-balancing systems.
.PP
The canonicalization behavior is controlled by the GSS-API library; with
the \s-1MIT\s0 Kerberos GSS-API library, canonicalization can be disabled by
setting \f(CW\*(C`rdns\*(C'\fR to false in the [libdefaults] section of \fIkrb5.conf\fR.  It
can also be disabled by passing an explicit Kerberos principal name via
the \fIprincipal\fR argument, which will then be used without changes.  If
canonicalization is desired, the caller may wish to canonicalize \fIhost\fR
before calling \fBremctl_open()\fR to avoid problems with multiple \s-1DNS\s0 calls
returning different results.
.PP
The default behavior, when a port of 0 is given, of trying 4373 and
falling back to 4444 will be removed in a future version of this library
in favor of using the \f(CW\*(C`remctl\*(C'\fR service in \fI/etc/services\fR if set and
then falling back on only 4373.  4444 was the poorly-chosen original
remctl port and should be phased out.
.PP
Connections established using the alternate-open interfaces \fBremctl_open_fd()\fR,
\&\fBremctl_open_addrinfo()\fR, and \fBremctl_open_sockaddr()\fR do not support the
automatic connection-reopening which is used to give the illusion of a
single long-lived connection when sending multiple commands to a server
which supports only version 1 of the remctl protocol.  Therefore, when
using these interfaces to open a connection to such a server, it will
only be possible to send a single command, after which the connection must
be closed and reopened before another command can be sent.
.SH "NOTES"
.IX Header "NOTES"
The remctl port number, 4373, was derived by tracing the diagonals of a
\&\s-1QWERTY\s0 keyboard up from the letters \f(CW\*(C`remc\*(C'\fR to the number row.
.SH "AUTHOR"
.IX Header "AUTHOR"
Russ Allbery <eagle@eyrie.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2007\-2009, 2014 The Board of Trustees of the Leland Stanford
Junior University
.PP
Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice and
this notice are preserved.  This file is offered as-is, without any
warranty.
.PP
SPDX-License-Identifier: \s-1FSFAP\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBremctl_new\fR\|(3), \fBremctl_error\fR\|(3), \fBremctl_set_ccache\fR\|(3),
\&\fBremctl_set_source_ip\fR\|(3), \fBremctl_set_timeout\fR\|(3)
.PP
The current version of the remctl library and complete details of the
remctl protocol are available from its web page at
<https://www.eyrie.org/~eagle/software/remctl/>.
